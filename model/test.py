import cv2
import numpy as np
import base64

base_64 = "" \

img_bytes = base64.b64decode(base_64)
img_array = np.frombuffer(img_bytes, dtype=np.uint8)

image = cv2.imdecode(img_array, cv2.IMREAD_COLOR)

if image is None:
    print("Error: Could not decode the image")
else:
    print("Image successfully decoded")
    
# Optional: Save the image to a file
cv2.imwrite("output_image.jpg", image)